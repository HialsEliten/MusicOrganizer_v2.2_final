
import java.lang.Integer;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Vegard Rogne
 */
public class FrameAddMedium extends javax.swing.JFrame {
//**********CD Variables**********
    private String cdTitleVar;
    private String cdArtistVar;
    private int cdReleaseYearVar;
    private boolean cdReleaseYearReady;
    private int cdArchiveNumberVar;
    private boolean cdArchiveNumberReady;
    //*****************************
    //*********LP Variables*********
    private int lpReleaseYearVar;
    private boolean lpReleaseYearReady;
    private int lpArchiveNumberVar;
    private boolean lpArchiveNumberReady;
    //********************************
    //**********HD Variables**********
    private String hdTitleVar;
    private String hdFilenameVar;
    private String hdFilepathVar;
    private int hdFilesizeVar;
    private boolean hdFilesizeReady;
    //*******************************
    //********Tape Variables********
    private String tapeTitleVar;
    private boolean tapeTypeVar;
    private int tapeArchiveNumberVar;
    private boolean tapeArchiveNumberReady;
    //******************************

    private Integer integer;
    private TrackOrganizer trackOrganizer;

    /**
     * Creates new form MainFrameVegard
     */
    public FrameAddMedium() {
      
    
        initComponents();
        
    }
    
    public void setInputParameter(TrackOrganizer trackOrganizer) {
        
        this.trackOrganizer = trackOrganizer;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cdFrame = new javax.swing.JFrame();
        addCdBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cdError = new javax.swing.JLabel();
        cdArchiveNumber = new javax.swing.JTextField();
        cdRecordLabel = new javax.swing.JTextField();
        cdReleaseYear = new javax.swing.JTextField();
        cdArtist = new javax.swing.JTextField();
        cdTitle = new javax.swing.JTextField();
        lpFrame = new javax.swing.JFrame();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        addLpBtn = new javax.swing.JButton();
        lpError = new javax.swing.JLabel();
        lpArchiveNumber = new javax.swing.JTextField();
        lpRecordLabel = new javax.swing.JTextField();
        lpReleaseYear = new javax.swing.JTextField();
        lpArtist = new javax.swing.JTextField();
        lpTitle = new javax.swing.JTextField();
        tapeFrame = new javax.swing.JFrame();
        jLabel11 = new javax.swing.JLabel();
        tapeDigBtn = new javax.swing.JRadioButton();
        tapeAnaBtn = new javax.swing.JRadioButton();
        jLabel12 = new javax.swing.JLabel();
        tapeError = new javax.swing.JLabel();
        tapeAddBtn = new javax.swing.JButton();
        tapeTitle = new javax.swing.JTextField();
        tapeArchiveNumber = new javax.swing.JTextField();
        hdFrame = new javax.swing.JFrame();
        jLabel13 = new javax.swing.JLabel();
        hdTitle = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        hdFilename = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        hdFilepath = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        hdFileSize = new javax.swing.JTextField();
        hdError = new javax.swing.JLabel();
        hdAddBtn = new javax.swing.JButton();
        frameAddCdBtn = new javax.swing.JButton();
        frameAddLpBtn = new javax.swing.JButton();
        frameAddTapeBtn = new javax.swing.JButton();
        frameAddHdBtn = new javax.swing.JButton();

        addCdBtn.setText("Add CD");
        addCdBtn.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                addCdBtnStateChanged(evt);
            }
        });
        addCdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCdBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Title:");

        jLabel2.setText("Artist:");

        jLabel3.setText("Release Year:");

        jLabel4.setText("Record Label:");

        jLabel5.setText("Archive Number:");

        cdArchiveNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cdArchiveNumberActionPerformed(evt);
            }
        });
        cdArchiveNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cdArchiveNumberKeyReleased(evt);
            }
        });

        cdRecordLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cdRecordLabelActionPerformed(evt);
            }
        });

        cdReleaseYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cdReleaseYearActionPerformed(evt);
            }
        });
        cdReleaseYear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cdReleaseYearKeyReleased(evt);
            }
        });

        cdArtist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cdArtistActionPerformed(evt);
            }
        });

        cdTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cdTitleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cdFrameLayout = new javax.swing.GroupLayout(cdFrame.getContentPane());
        cdFrame.getContentPane().setLayout(cdFrameLayout);
        cdFrameLayout.setHorizontalGroup(
            cdFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cdFrameLayout.createSequentialGroup()
                .addGroup(cdFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cdFrameLayout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(addCdBtn))
                    .addGroup(cdFrameLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cdError, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(cdFrameLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(cdFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(cdFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cdTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                            .addComponent(cdArtist)
                            .addComponent(cdReleaseYear)
                            .addComponent(cdRecordLabel)
                            .addComponent(cdArchiveNumber))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        cdFrameLayout.setVerticalGroup(
            cdFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cdFrameLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(cdFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cdTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(cdFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cdArtist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(cdFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cdReleaseYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(cdFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cdRecordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(cdFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cdArchiveNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(addCdBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cdError, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel6.setText("Title:");

        jLabel7.setText("Artist:");

        jLabel8.setText("Release Year:");

        jLabel9.setText("Record Label:");

        jLabel10.setText("Archive Number:");

        addLpBtn.setText("Add LP");
        addLpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addLpBtnActionPerformed(evt);
            }
        });

        lpArchiveNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lpArchiveNumberActionPerformed(evt);
            }
        });
        lpArchiveNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lpArchiveNumberKeyReleased(evt);
            }
        });

        lpRecordLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lpRecordLabelActionPerformed(evt);
            }
        });

        lpReleaseYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lpReleaseYearActionPerformed(evt);
            }
        });
        lpReleaseYear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lpReleaseYearKeyReleased(evt);
            }
        });

        lpArtist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lpArtistActionPerformed(evt);
            }
        });

        lpTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lpTitleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout lpFrameLayout = new javax.swing.GroupLayout(lpFrame.getContentPane());
        lpFrame.getContentPane().setLayout(lpFrameLayout);
        lpFrameLayout.setHorizontalGroup(
            lpFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lpFrameLayout.createSequentialGroup()
                .addGroup(lpFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(lpFrameLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(lpFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(lpFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lpTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                            .addComponent(lpArtist)
                            .addComponent(lpReleaseYear)
                            .addComponent(lpRecordLabel)
                            .addComponent(lpArchiveNumber)))
                    .addGroup(lpFrameLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(addLpBtn))
                    .addGroup(lpFrameLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lpError, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        lpFrameLayout.setVerticalGroup(
            lpFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lpFrameLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(lpFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lpTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(lpFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lpArtist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(lpFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lpReleaseYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(lpFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(lpRecordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(lpFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(lpArchiveNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addLpBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lpError, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel11.setText("Title:");

        tapeDigBtn.setText("Digital");
        tapeDigBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tapeDigBtnActionPerformed(evt);
            }
        });

        tapeAnaBtn.setText("Analog");
        tapeAnaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tapeAnaBtnActionPerformed(evt);
            }
        });

        jLabel12.setText("Archive Number:");

        tapeAddBtn.setText("Add Tape");
        tapeAddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tapeAddBtnActionPerformed(evt);
            }
        });

        tapeTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tapeTitleActionPerformed(evt);
            }
        });

        tapeArchiveNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tapeArchiveNumberActionPerformed(evt);
            }
        });
        tapeArchiveNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tapeArchiveNumberKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout tapeFrameLayout = new javax.swing.GroupLayout(tapeFrame.getContentPane());
        tapeFrame.getContentPane().setLayout(tapeFrameLayout);
        tapeFrameLayout.setHorizontalGroup(
            tapeFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tapeFrameLayout.createSequentialGroup()
                .addGroup(tapeFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tapeFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(tapeFrameLayout.createSequentialGroup()
                            .addGap(30, 30, 30)
                            .addComponent(jLabel12)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(tapeArchiveNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(tapeFrameLayout.createSequentialGroup()
                            .addGroup(tapeFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(tapeFrameLayout.createSequentialGroup()
                                    .addGap(41, 41, 41)
                                    .addComponent(jLabel11)
                                    .addGap(26, 26, 26))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tapeFrameLayout.createSequentialGroup()
                                    .addComponent(tapeDigBtn)
                                    .addGap(1, 1, 1)))
                            .addGroup(tapeFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(tapeTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(tapeFrameLayout.createSequentialGroup()
                                    .addGap(29, 29, 29)
                                    .addComponent(tapeAnaBtn))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tapeFrameLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(tapeError, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tapeFrameLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(tapeAddBtn)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        tapeFrameLayout.setVerticalGroup(
            tapeFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tapeFrameLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(tapeFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(tapeTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(tapeFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tapeDigBtn)
                    .addComponent(tapeAnaBtn))
                .addGap(18, 18, 18)
                .addGroup(tapeFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(tapeArchiveNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(tapeAddBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(tapeError, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        jLabel13.setText("Title:");

        hdTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hdTitleActionPerformed(evt);
            }
        });

        jLabel14.setText("Filename:");

        hdFilename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hdFilenameActionPerformed(evt);
            }
        });

        jLabel15.setText("Filepath:");

        hdFilepath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hdFilepathActionPerformed(evt);
            }
        });

        jLabel16.setText("Filesize:");

        hdFileSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hdFileSizeActionPerformed(evt);
            }
        });
        hdFileSize.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                hdFileSizeKeyReleased(evt);
            }
        });

        hdAddBtn.setText("Add HD");
        hdAddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hdAddBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout hdFrameLayout = new javax.swing.GroupLayout(hdFrame.getContentPane());
        hdFrame.getContentPane().setLayout(hdFrameLayout);
        hdFrameLayout.setHorizontalGroup(
            hdFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hdFrameLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(hdAddBtn)
                .addGap(0, 73, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hdFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(hdFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(hdError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(hdFrameLayout.createSequentialGroup()
                        .addGroup(hdFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(hdFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(hdFilepath, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                            .addComponent(hdFilename)
                            .addComponent(hdTitle)
                            .addComponent(hdFileSize))))
                .addGap(29, 29, 29))
        );
        hdFrameLayout.setVerticalGroup(
            hdFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hdFrameLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(hdFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(hdTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(hdFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(hdFilename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(hdFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(hdFilepath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(hdFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(hdFileSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(hdAddBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(hdError, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        frameAddCdBtn.setText("Add CD");
        frameAddCdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frameAddCdBtnActionPerformed(evt);
            }
        });

        frameAddLpBtn.setText("Add LP");
        frameAddLpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frameAddLpBtnActionPerformed(evt);
            }
        });

        frameAddTapeBtn.setText("Add Tape");
        frameAddTapeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frameAddTapeBtnActionPerformed(evt);
            }
        });

        frameAddHdBtn.setText("Add HD");
        frameAddHdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frameAddHdBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(frameAddLpBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(frameAddTapeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(frameAddCdBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(frameAddHdBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(frameAddCdBtn)
                .addGap(18, 18, 18)
                .addComponent(frameAddLpBtn)
                .addGap(18, 18, 18)
                .addComponent(frameAddTapeBtn)
                .addGap(18, 18, 18)
                .addComponent(frameAddHdBtn)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
     * CD Title Field.
     *
     * @param evt
     */
    private void cdTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cdTitleActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cdTitleActionPerformed

    /**
     * CD Artist Field.
     *
     * @param evt
     */
    private void cdArtistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cdArtistActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cdArtistActionPerformed

    /**
     * CD Release Year Field.
     *
     * @param evt
     */
    private void cdReleaseYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cdReleaseYearActionPerformed
        // TODO add your handling code here:
        String tempString = cdReleaseYear.getText();
        cdReleaseYearVar = integer.parseInt(tempString);
    }//GEN-LAST:event_cdReleaseYearActionPerformed

    /**
     * CD Record Label Field.
     *
     * @param evt
     */
    private void cdRecordLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cdRecordLabelActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cdRecordLabelActionPerformed

    /**
     * CD Archive Number Field.
     *
     * @param evt
     */
    private void cdArchiveNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cdArchiveNumberActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cdArchiveNumberActionPerformed

    /**
     * LP Title Field.
     *
     * @param evt
     */
    private void lpTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lpTitleActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_lpTitleActionPerformed

    /**
     * LP Artist Field.
     *
     * @param evt
     */
    private void lpArtistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lpArtistActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_lpArtistActionPerformed

    /**
     * LP Release Year Field.
     *
     * @param evt
     */
    private void lpReleaseYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lpReleaseYearActionPerformed

    }//GEN-LAST:event_lpReleaseYearActionPerformed

    /**
     * LP Record Label Field.
     *
     * @param evt
     */
    private void lpRecordLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lpRecordLabelActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_lpRecordLabelActionPerformed

    /**
     * LP Archive Number Field.
     *
     * @param evt
     */
    private void lpArchiveNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lpArchiveNumberActionPerformed

    }//GEN-LAST:event_lpArchiveNumberActionPerformed
    /**
     * LP Add Button.
     *
     * @param evt
     */
    private void addLpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addLpBtnActionPerformed
        // TODO add your handling code here:
        System.out.println("Title: " + lpTitle.getText());
        System.out.println("Artist: " + lpArtist.getText());
        System.out.println("Record Label: " + lpRecordLabel.getText());
        System.out.println("Release Year: " + lpReleaseYearVar);
        System.out.println("Archive Number: " + lpArchiveNumberVar);
        boolean titleReady = true;
        if (lpTitle.getText().isEmpty()) {
            lpError.setText("Error in Title Field!");
            titleReady = false;
        }
        boolean artistReady = true;
        if (lpArtist.getText().isEmpty()) {
            lpError.setText("Error in Artist Field!");
            artistReady = false;
        }
        boolean releaseYearReady = true;
        if (lpReleaseYear.getText().isEmpty()) {
            lpError.setText("Error in Release Year Field!");
            releaseYearReady = false;
        }
        boolean recordLabelReady = true;
        if (lpRecordLabel.getText().isEmpty()) {
            lpError.setText("Error in Record Label Field!");
            recordLabelReady = false;
        }
        boolean archiveNumberReady = true;
        if (lpArchiveNumber.getText().isEmpty()) {
            lpError.setText("Error in Archive Number Field!");
            archiveNumberReady = false;
        }
        if (!lpReleaseYearReady) {
            lpError.setText("Wrong Input In Release Year Field!");
        }
        if ((titleReady)
                && (artistReady)
                && (releaseYearReady)
                && (recordLabelReady)
                && (archiveNumberReady)
                && (this.lpReleaseYearReady)
                && (this.lpArchiveNumberReady)) {
            trackOrganizer.addLP(lpTitle.getText(), lpArtist.getText(), lpReleaseYearVar, lpRecordLabel.getText(), lpArchiveNumberVar);
            lpError.setText("LP Added!" + " Title: " + lpTitle.getText()
                    + " Artist: " + lpArtist.getText());
            lpTitle.setText(null);
            lpArtist.setText(null);
            lpReleaseYear.setText(null);
            lpRecordLabel.setText(null);
            lpArchiveNumber.setText(null);
        }
    }//GEN-LAST:event_addLpBtnActionPerformed

    /**
     * Tape Analog Button.
     *
     * @param evt
     */
    private void tapeAnaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tapeAnaBtnActionPerformed
        // TODO add your handling code here:
        tapeDigBtn.setSelected(false);
        tapeTypeVar = false;
    }//GEN-LAST:event_tapeAnaBtnActionPerformed

    /**
     * Tape Title Field.
     *
     * @param evt
     */
    private void tapeTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tapeTitleActionPerformed
        // TODO add your handling code here:
        this.tapeTitleVar = tapeTitle.getText();
    }//GEN-LAST:event_tapeTitleActionPerformed

    /**
     * Tape Digital Button.
     *
     * @param evt
     */
    private void tapeDigBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tapeDigBtnActionPerformed
        // TODO add your handling code here:
        tapeAnaBtn.setSelected(false);
        tapeTypeVar = true;
    }//GEN-LAST:event_tapeDigBtnActionPerformed

    /**
     * Tape Archive Number Field.
     *
     * @param evt
     */
    private void tapeArchiveNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tapeArchiveNumberActionPerformed

    }//GEN-LAST:event_tapeArchiveNumberActionPerformed

    /**
     * Tape Add Tape Button.
     *
     * @param evt
     */
    private void tapeAddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tapeAddBtnActionPerformed
        // TODO add your handling code here:
        String tapeType = "";
        if (tapeTypeVar) {
            tapeType = "Digital";
        }
        if (!tapeTypeVar) {
            tapeType = "Analog";
        }
        boolean titleReady = true;
        if (tapeTitle.getText().isEmpty()) {
            tapeError.setText("Error in Title Field!");
            titleReady = false;
        }
        boolean archiveNumberReady = true;
        if (tapeArchiveNumber.getText().isEmpty()) {
            tapeError.setText("Error in Archive Number Field!");
            archiveNumberReady = false;
        }

        if ((titleReady) && (archiveNumberReady)&&(tapeArchiveNumberReady)) {
            trackOrganizer.addTape(tapeTitle.getText(), tapeType, tapeArchiveNumberVar);
            tapeError.setText("Tape Added!" + " Title: " + tapeTitle.getText()
                    + " Tape Type: " + tapeType);
            tapeTitle.setText(null);
            tapeArchiveNumber.setText(null);
        }
    }//GEN-LAST:event_tapeAddBtnActionPerformed

    /**
     * HD Title Field.
     *
     * @param evt
     */
    private void hdTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hdTitleActionPerformed
        // TODO add your handling code here:
        this.hdTitleVar = hdTitle.getText();
    }//GEN-LAST:event_hdTitleActionPerformed

    /**
     * HD Filename Field.
     *
     * @param evt
     */
    private void hdFilenameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hdFilenameActionPerformed
        // TODO add your handling code here:
        this.hdFilenameVar = hdFilename.getText();
    }//GEN-LAST:event_hdFilenameActionPerformed

    /**
     * HD Filepath Field.
     *
     * @param evt
     */
    private void hdFilepathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hdFilepathActionPerformed
        // TODO add your handling code here:
        this.hdFilepathVar = hdFilepath.getText();
    }//GEN-LAST:event_hdFilepathActionPerformed

    /**
     * Hd Filesize Field.
     *
     * @param evt
     */
    private void hdFileSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hdFileSizeActionPerformed

    }//GEN-LAST:event_hdFileSizeActionPerformed

    /**
     * HD Add HD Button.
     *
     * @param evt
     */
    private void hdAddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hdAddBtnActionPerformed
        // TODO add your handling code here:
        System.out.println("Title: " + hdTitle.getText());
        System.out.println("Filename: " + hdFilename.getText());
        System.out.println("Filepath: " + hdFilepath.getText());
        System.out.println("Filesize: " + hdFilesizeVar);
        boolean titleReady = true;
        if (hdTitle.getText().isEmpty()) {
            titleReady = false;
            hdError.setText("Error in Title Field!");
        }
        boolean filenameReady = true;
        if (hdFilename.getText().isEmpty()) {
            filenameReady = false;
            hdError.setText("Error in Filename Field!");
        }
        boolean filepathReady = true;
        if (hdFilepath.getText().isEmpty()) {
            filepathReady = false;
            hdError.setText("Error in Filepath Field!");
        }
        boolean filesizeReady = true;
        if (hdFileSize.getText().isEmpty()) {
            filesizeReady = false;
            hdError.setText("Error in Filesize Field!");
        }
        if (!this.hdFilesizeReady) {
            hdError.setText("Wrong Input In Filesize Field!");
        }
        if ((titleReady)
                && (filenameReady)
                && (filepathReady)
                && (filesizeReady)
                && (this.hdFilesizeReady)) {
            trackOrganizer.addHD(hdTitle.getText(), hdFilename.getText(), hdFilepath.getText(), hdFilesizeVar);
            hdError.setText("HD Added!" + " Title: " + hdTitle.getText()
                    + " Filename: " + hdFilename.getText());
            hdTitle.setText(null);
            hdFilename.setText(null);
            hdFilepath.setText(null);
            hdFileSize.setText(null);
        }
    }//GEN-LAST:event_hdAddBtnActionPerformed

    /**
     * Frame Add Cd Button.
     *
     * @param evt
     */
    private void frameAddCdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frameAddCdBtnActionPerformed
        // TODO add your handling code here:
        cdFrame.setVisible(true);
        cdFrame.setSize(250, 350);
    }//GEN-LAST:event_frameAddCdBtnActionPerformed

    /**
     * Frame Add Lp Button.
     *
     * @param evt
     */
    private void frameAddLpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frameAddLpBtnActionPerformed
        // TODO add your handling code here:
        lpFrame.setVisible(true);
        lpFrame.setSize(250, 400);

    }//GEN-LAST:event_frameAddLpBtnActionPerformed

    /**
     *
     * Frame Add Tape Button.
     *
     * @param evt
     */
    private void frameAddTapeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frameAddTapeBtnActionPerformed
        // TODO add your handling code here:
        tapeFrame.setVisible(true);
        tapeFrame.setSize(250, 300);
        tapeDigBtn.setSelected(true);
    }//GEN-LAST:event_frameAddTapeBtnActionPerformed

    /**
     * Frame Add HD Button.
     *
     * @param evt
     */
    private void frameAddHdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frameAddHdBtnActionPerformed
        // TODO add your handling code here:
        hdFrame.setVisible(true);
        hdFrame.setSize(250, 350);
    }//GEN-LAST:event_frameAddHdBtnActionPerformed

    /**
     * CD Add CD.
     *
     * @param evt
     */
    private void addCdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCdBtnActionPerformed
        // TODO add your handling code here:
        System.out.println("Title: " + cdTitle.getText());
        System.out.println("Artist: " + cdArtist.getText());
        System.out.println("Release Date: " + cdReleaseYearVar);
        System.out.println("Record Label: " + cdRecordLabel.getText());
        System.out.println("Archive Number: " + cdArchiveNumberVar);

        boolean titleReady = true;
        if (cdTitle.getText().isEmpty()) {
            cdError.setText("Error in Title Field!");
            titleReady = false;
        }
        boolean artistReady = true;
        if (cdArtist.getText().isEmpty()) {
            cdError.setText("Error in Artist Field!");
            artistReady = false;
        }
        boolean releaseYearReady = true;
        if (cdReleaseYear.getText().isEmpty()) {
            cdError.setText("Error in Release Year Field!");
            releaseYearReady = false;
        }
        boolean recordLabelReady = true;
        if (cdRecordLabel.getText().isEmpty()) {
            cdError.setText("Error in Record Label Field!");
            recordLabelReady = false;
        }
        boolean archiveNumberReady = true;
        if (cdArchiveNumber.getText().isEmpty()) {
            cdError.setText("Error in Archive Number Field!");
            archiveNumberReady = false;
        }
        if (!this.cdReleaseYearReady) {
            cdError.setText("Wrong Input In Release Year Field!");
        }
        if ((titleReady)
                && (artistReady)
                && (releaseYearReady)
                && (recordLabelReady)
                && (archiveNumberReady)
                && (this.cdReleaseYearReady)
                && (this.cdArchiveNumberReady)) {
            trackOrganizer.addCD(cdTitle.getText(), cdArtist.getText(), cdReleaseYearVar, cdRecordLabel.getText(), cdArchiveNumberVar);
            cdError.setText("CD Added! " + "Title: " + cdTitle.getText()
                    + "  Artist: " + cdArtist.getText());
            cdTitle.setText(null);
            cdArtist.setText(null);
            cdReleaseYear.setText(null);
            cdRecordLabel.setText(null);
            cdArchiveNumber.setText(null);
        }
    }//GEN-LAST:event_addCdBtnActionPerformed

    private void addCdBtnStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_addCdBtnStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_addCdBtnStateChanged

    /**
     * CD Release Year Field.
     *
     * @param evt
     */
    private void cdReleaseYearKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cdReleaseYearKeyReleased
        // TODO add your handling code here:
        try {
            cdError.setText(null);
            String tempString = cdReleaseYear.getText();
            int tempInt = integer.parseInt(tempString);
            cdReleaseYearVar = tempInt;
            this.cdReleaseYearReady = true;
        } catch (NumberFormatException e) {
            cdError.setText("Error in Minutes Field!");
            this.cdReleaseYearReady = false;
        }
    }//GEN-LAST:event_cdReleaseYearKeyReleased

    /**
     * CD Archive Number Field.
     *
     * @param evt
     */
    private void cdArchiveNumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cdArchiveNumberKeyReleased
        // TODO add your handling code here:
        try {
            cdArchiveNumberReady = true;
            String tempString = cdArchiveNumber.getText();
            //System.out.println(tempString);
            int tempInt = integer.parseInt(tempString);
            cdArchiveNumberVar = tempInt;
            if (trackOrganizer.getMediaAtArchiveNumber(cdArchiveNumberVar) != null) {
                cdError.setText("Archive Number Already In Use!");
                cdArchiveNumberReady = false;

            } else if (trackOrganizer.getMediaAtArchiveNumber(cdArchiveNumberVar) == null) {
                cdArchiveNumberReady = true;
                cdError.setText(null);
            }
        } catch (NumberFormatException e) {
            cdError.setText("Error in Archive Number!");

        }
    }//GEN-LAST:event_cdArchiveNumberKeyReleased

    /**
     * LP Archive Number Field.
     *
     * @param evt
     */
    private void lpArchiveNumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lpArchiveNumberKeyReleased
        // TODO add your handling code here:
        try {
           lpArchiveNumberReady = true;
            String tempString = lpArchiveNumber.getText();
            //System.out.println(tempString);
            int tempInt = integer.parseInt(tempString);
            lpArchiveNumberVar = tempInt;
            if (trackOrganizer.getMediaAtArchiveNumber(lpArchiveNumberVar) != null) {
                lpError.setText("Archive Number Already In Use!");
                lpArchiveNumberReady = false;

            } else if (trackOrganizer.getMediaAtArchiveNumber(lpArchiveNumberVar) == null) {
                lpArchiveNumberReady = true;
                lpError.setText(null);
            }
        } catch (NumberFormatException e) {
            lpError.setText("Error in Archive Number!");

        }
    }//GEN-LAST:event_lpArchiveNumberKeyReleased

    /**
     * LP Release Year Field.
     *
     * @param evt
     */
    private void lpReleaseYearKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lpReleaseYearKeyReleased
        // TODO add your handling code here:
        try {
            lpError.setText(null);
            String tempString = lpReleaseYear.getText();
            int tempInt = integer.parseInt(tempString);
            lpReleaseYearVar = tempInt;
            this.lpReleaseYearReady = true;
        } catch (NumberFormatException e) {
            lpError.setText("Error in Minutes Field!");
            this.lpReleaseYearReady = false;
        }
    }//GEN-LAST:event_lpReleaseYearKeyReleased

    private void tapeArchiveNumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tapeArchiveNumberKeyReleased
        // TODO add your handling code here:
        try {
           tapeArchiveNumberReady = true;
            String tempString = tapeArchiveNumber.getText();
            //System.out.println(tempString);
            int tempInt = integer.parseInt(tempString);
            tapeArchiveNumberVar = tempInt;
            if (trackOrganizer.getMediaAtArchiveNumber(tapeArchiveNumberVar) != null) {
                tapeError.setText("Archive Number Already In Use!");
                tapeArchiveNumberReady = false;

            } else if (trackOrganizer.getMediaAtArchiveNumber(tapeArchiveNumberVar) == null) {
                tapeArchiveNumberReady = true;
                tapeError.setText(null);
            }
        } catch (NumberFormatException e) {
            tapeError.setText("Error in Archive Number!");

        }
    }//GEN-LAST:event_tapeArchiveNumberKeyReleased

    /**
     * HD Filesize Field.
     *
     * @param evt
     */
    private void hdFileSizeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hdFileSizeKeyReleased
        // TODO add your handling code here:
        try {
            hdError.setText(null);
            String tempString = hdFileSize.getText();
            int tempInt = integer.parseInt(tempString);
            hdFilesizeVar = tempInt;
            this.hdFilesizeReady = true;
        } catch (NumberFormatException e) {
            hdError.setText("Error in Minutes Field!");
            this.hdFilesizeReady = false;
        }
    }//GEN-LAST:event_hdFileSizeKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameAddMedium.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameAddMedium.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameAddMedium.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameAddMedium.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameAddMedium().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCdBtn;
    private javax.swing.JButton addLpBtn;
    private javax.swing.JTextField cdArchiveNumber;
    private javax.swing.JTextField cdArtist;
    private javax.swing.JLabel cdError;
    private javax.swing.JFrame cdFrame;
    private javax.swing.JTextField cdRecordLabel;
    private javax.swing.JTextField cdReleaseYear;
    private javax.swing.JTextField cdTitle;
    private javax.swing.JButton frameAddCdBtn;
    private javax.swing.JButton frameAddHdBtn;
    private javax.swing.JButton frameAddLpBtn;
    private javax.swing.JButton frameAddTapeBtn;
    private javax.swing.JButton hdAddBtn;
    private javax.swing.JLabel hdError;
    private javax.swing.JTextField hdFileSize;
    private javax.swing.JTextField hdFilename;
    private javax.swing.JTextField hdFilepath;
    private javax.swing.JFrame hdFrame;
    private javax.swing.JTextField hdTitle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField lpArchiveNumber;
    private javax.swing.JTextField lpArtist;
    private javax.swing.JLabel lpError;
    private javax.swing.JFrame lpFrame;
    private javax.swing.JTextField lpRecordLabel;
    private javax.swing.JTextField lpReleaseYear;
    private javax.swing.JTextField lpTitle;
    private javax.swing.JButton tapeAddBtn;
    private javax.swing.JRadioButton tapeAnaBtn;
    private javax.swing.JTextField tapeArchiveNumber;
    private javax.swing.JRadioButton tapeDigBtn;
    private javax.swing.JLabel tapeError;
    private javax.swing.JFrame tapeFrame;
    private javax.swing.JTextField tapeTitle;
    // End of variables declaration//GEN-END:variables
}
